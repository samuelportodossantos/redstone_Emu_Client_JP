// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RedStoneEmu.Database.RedStoneEF;
using RedStoneLib.Model;
using System;

namespace RedStoneEmu.Migrations
{
    [DbContext(typeof(gameContext))]
    [Migration("20180224065451_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("RedStoneLib.Model.Item", b =>
                {
                    b.Property<int>("UniqueID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("Endurance");

                    b.Property<short>("ItemIndex");

                    b.Property<byte>("Number");

                    b.Property<byte>("StackableFlag");

                    b.Property<byte[]>("Values");

                    b.Property<byte[]>("_ItemOptionInfos")
                        .HasColumnName("OPs");

                    b.Property<bool>("unk_bool1");

                    b.Property<bool>("unk_bool2");

                    b.Property<bool>("unk_bool3");

                    b.Property<byte>("unk_flag1");

                    b.Property<byte>("unk_flag2");

                    b.Property<byte>("unk_flag3");

                    b.Property<byte>("unk_flag4");

                    b.Property<byte>("unk_flag5");

                    b.HasKey("UniqueID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RedStoneLib.Model.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd();

                    b.Property<uint>("BaseCP");

                    b.Property<uint>("BaseHP");

                    b.Property<string>("BeltItem_DB")
                        .HasColumnName("BeltItem");

                    b.Property<string>("Caresistance_DB")
                        .HasColumnName("CAResistance");

                    b.Property<int>("DeathPenarty");

                    b.Property<short>("Defence_DB")
                        .HasColumnName("Defence");

                    b.Property<short>("Direct_DB")
                        .HasColumnName("Direct");

                    b.Property<uint>("EXP");

                    b.Property<string>("EquipmentItem_DB")
                        .HasColumnName("EquipmentItem");

                    b.Property<int>("GMLevel");

                    b.Property<uint>("Gold");

                    b.Property<short>("GuildIndex_DB")
                        .HasColumnName("GuildIndex");

                    b.Property<string>("InventoryItem_DB")
                        .HasColumnName("InventoryItem");

                    b.Property<bool>("IsRun");

                    b.Property<short>("Job");

                    b.Property<short>("LevelHPCPBobuns_DB")
                        .HasColumnName("LevelHPCPBobuns");

                    b.Property<short>("Level_DB")
                        .HasColumnName("Level");

                    b.Property<short>("MapSerial_DB")
                        .HasColumnName("MapSerial");

                    b.Property<short>("MaxPower_DB")
                        .HasColumnName("MaxPower");

                    b.Property<short>("MinPower_DB")
                        .HasColumnName("MinPower");

                    b.Property<byte>("MiniPet1");

                    b.Property<byte>("MiniPet2");

                    b.Property<string>("Mresistance_DB")
                        .HasColumnName("MResistance");

                    b.Property<string>("Name");

                    b.Property<int>("NowCP");

                    b.Property<uint>("NowHP");

                    b.Property<short>("PosX_DB")
                        .HasColumnName("PosX");

                    b.Property<short>("PosY_DB")
                        .HasColumnName("PosY");

                    b.Property<byte>("RebornNumber");

                    b.Property<uint>("SkillPoint");

                    b.Property<short>("StateHPCPBonus_DB")
                        .HasColumnName("StateHPCPBonus");

                    b.Property<uint>("StatusPoint");

                    b.Property<string>("Status_DB")
                        .HasColumnName("Status");

                    b.Property<short>("Tendency");

                    b.Property<string>("UserID");

                    b.HasKey("PlayerId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
