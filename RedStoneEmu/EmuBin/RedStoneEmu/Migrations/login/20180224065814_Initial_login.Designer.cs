// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RedStoneEmu.Database.RedStoneEF;
using RedStoneLib.Packets.RSPacket.Login;
using System;

namespace RedStoneEmu.Migrations.login
{
    [DbContext(typeof(loginContext))]
    [Migration("20180224065814_Initial_login")]
    partial class Initial_login
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("RedStoneEmu.Database.RedStoneEF.LoginLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("Datetime")
                        .HasColumnName("datetime");

                    b.Property<string>("IPAddress")
                        .HasColumnName("ip_address");

                    b.Property<string>("MACAddress")
                        .HasColumnName("mac_address");

                    b.Property<string>("UserName")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("Datetime")
                        .IsUnique();

                    b.ToTable("login_log");
                });

            modelBuilder.Entity("RedStoneLib.Packets.RSPacket.Login.GameServerInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<bool>("Enable")
                        .HasColumnName("enable");

                    b.Property<string>("GlobalIP")
                        .HasColumnName("global_ip");

                    b.Property<string>("LocalIP")
                        .HasColumnName("local_ip");

                    b.Property<int>("ServerId")
                        .HasColumnName("server_id");

                    b.Property<string>("ServerName")
                        .HasColumnName("server_name");

                    b.Property<int>("ServerType")
                        .HasColumnName("server_type");

                    b.HasKey("Id");

                    b.HasIndex("LocalIP")
                        .IsUnique();

                    b.HasIndex("ServerId")
                        .IsUnique();

                    b.HasIndex("ServerName")
                        .IsUnique();

                    b.ToTable("game_server_info");
                });
#pragma warning restore 612, 618
        }
    }
}
